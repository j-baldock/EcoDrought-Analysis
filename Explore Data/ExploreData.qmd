---
title: "Explore Long-Term Data"
format: html
editor: visual
---

Purpose: Explore (long-term) data and (recent) climatic context of EcoD years

```{r setup, include = FALSE}
knitr::opts_chunk$set(dpi = 300)
```

### Load libraries
```{r}
library(tidyverse)
library(daymetr)
library(zoo)
library(RColorBrewer)
library(sf)
library(mapview)
library(fasstr)
library(nhdplusTools)
library(SPEI)
library(knitr)
```


## Site info and daily data
```{r}
# site information and locations
siteinfo <- read_csv("C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/Data/EcoDrought_SiteInformation.csv")
siteinfo_sp <- st_as_sf(siteinfo, coords = c("long", "lat"), crs = 4326)
mapview(siteinfo_sp, zcol = "designation")

# flow (and temp) data
dat <- read_csv("C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/Data/EcoDrought_FlowTempData_DailyWeekly.csv")
```


## Daymet air temp and precip
```{r}
mycols <- brewer.pal(6, "Dark2")
siteinfo_big <- siteinfo %>% filter(designation == "big")

# download point location Daymet data
climlist <- vector("list", length = dim(siteinfo_big)[1])
for (i in 1:dim(siteinfo_big)[1]) {
  clim <- download_daymet(site = siteinfo_big$site_name[i], lat = siteinfo_big$lat[i], lon = siteinfo_big$long[i], start = 1980, end = 2023, internal = T)
  climlist[[i]] <- tibble(clim$data) %>% 
    mutate(air_temp_mean = (tmax..deg.c. + tmin..deg.c.)/2, 
           date = as.Date(paste(year, yday, sep = "-"), "%Y-%j"),
           site_name = siteinfo_big$site_name[i]) %>%
    select(12,2,11,10,4,6) %>% rename(precip_mmday = 5, swe_kgm2 = 6)
  #print(i)
}

# combine and calculate 7-day moving averages
climdf <- do.call(rbind, climlist) %>% left_join(siteinfo_big) %>% mutate(year = year(date)) %>% 
  group_by(station_no, site_name, site_id, basin, region, lat, long, elev_ft, area_sqmi, designation) %>%
  mutate(air_mean_7 = rollapply(air_temp_mean, FUN = mean, width = 7, align = "center", fill = NA),
         precip_mean_7 = rollapply(precip_mmday, FUN = mean, width = 7, align = "center", fill = NA),
         swe_mean_7 = rollapply(swe_kgm2, FUN = mean, width = 7, align = "center", fill = NA)) %>%
  ungroup() 

# trim to Big G sites
climdf_big <- climdf %>% filter(designation == "big")
```

View long-term trends in mean annual air temperature, by basin
```{r, fig.height = 8, fig.width = 8}
# jpeg("./Explore Data/Long Term Plots/ClimaticContext_Daymet_AirTemp_AnnualTrend_BigG.jpg", height = 8, width = 8, units = "in", res = 500)
climdf_big_summ <- climdf_big %>% group_by(site_name, year) %>% summarize(anntemp = mean(air_temp_mean)) %>% ungroup()
climdf_big_summ %>% 
  ggplot(aes(x = year, y = anntemp)) + geom_point() + facet_wrap(~site_name) + 
  geom_smooth(method = "lm", se = TRUE) + xlab("Year") + ylab("Mean annual air temperature (deg C)") +
  theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# dev.off()
```

View long-term trends in total annual precipitation, by basin
```{r, fig.height = 8, fig.width = 8}
# jpeg("./Explore Data/Long Term Plots/ClimaticContext_Daymet_AirTemp_AnnualTrend_BigG.jpg", height = 8, width = 8, units = "in", res = 500)
climdf_big_summ <- climdf_big %>% group_by(site_name, year) %>% summarize(annprec = sum(precip_mmday)) %>% ungroup()
climdf_big_summ %>% 
  ggplot(aes(x = year, y = annprec)) + geom_point() + facet_wrap(~site_name) + 
  geom_smooth(method = "lm", se = TRUE) + xlab("Year") + ylab("Total annual precipitaion (mm)") +
  theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# dev.off()
```

View annual air temperature time series
```{r, fig.height = 8, fig.width = 8}
# jpeg("./Explore Data/Long Term Plots/ClimaticContext_Daymet_AirTemp_Regime_BigG.jpg", height = 8, width = 8, units = "in", res = 500)
ggplot() + 
  geom_line(data = climdf_big, aes(x = yday, y = air_mean_7, group = year, color = year), size = 0.2) +
  facet_wrap(~ site_name) + xlab("Day of year") + ylab("7-day mean air temperature (deg C)") + 
  theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# dev.off()
```

View annual air temperature time series, highlight recent years
```{r, fig.height = 8, fig.width = 8}
climdf_big_recent <- climdf_big %>% filter(year %in% c(2018:2023))
# jpeg("./Explore Data/Long Term Plots/ClimaticContext_Daymet_AirTemp_Regime_BigG_Recent.jpg", height = 8, width = 8, units = "in", res = 500)
ggplot() + 
  geom_line(data = climdf_big, aes(x = yday, y = air_mean_7, group = year), color = "grey70", size = 0.25) +
  geom_line(data = climdf_big_recent, aes(x = yday, y = air_mean_7, group = as.factor(year), color = as.factor(year))) +
  scale_colour_manual(values = mycols) + facet_wrap(~ site_name) +
  xlab("Day of year") + ylab("7-day mean air temperature") + 
  theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# dev.off()
```


## Big G temp, flow, and yield
```{r}
dat_daily_G <- dat %>% filter(designation == "big", site_name != "West Brook 0") %>% mutate(yday = yday(date), year = year(date))
dat_daily_G_recent <- dat_daily_G %>% filter(year %in% c(2018:2023))
year_range <- dat_daily_G %>% group_by(site_name) %>% summarize(minyear = min(year), maxyear = max(year)) %>% mutate(yearrange = paste(minyear, maxyear, sep = "-"))
mycols <- brewer.pal(6, "Dark2")
dat_daily_G %>% group_by(site_name) %>% summarize(mindate = min(date), maxdate = max(date)) %>% kable(caption = "Date range of Big G streamflow data")
```

In-situ stream temperature
```{r, fig.height = 8, fig.width = 9}
# jpeg("./Explore Data/Long Term Plots/ClimaticContext_StreamTemp_BigG_Recent.jpg", height = 8, width = 9, units = "in", res = 500)
ggplot() + 
  geom_line(data = dat_daily_G, aes(x = yday, y = tempc_mean_7, group = year), color = "grey70", size = 0.25) +
  geom_line(data = dat_daily_G_recent, aes(x = yday, y = tempc_mean_7, group = as.factor(year), color = as.factor(year))) +
  scale_colour_manual(values = mycols) + facet_wrap(~ site_name, nrow = 3) + xlab("Day of calendar year") + ylab("7-day mean temperature (deg C)") + ylim(0,22) +
  theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.9,0.05), legend.justification = c(1,0)) + labs(color = "Year")
# dev.off()
```

In-situ streamflow
```{r, fig.height = 8, fig.width = 9}
# jpeg("./Explore Data/Long Term Plots/ClimaticContext_StreamFlow_BigG_Recent.jpg", height = 8, width = 9, units = "in", res = 500)
ggplot() + 
  geom_line(data = dat_daily_G, aes(x = yday, y = log(flow_mean_7), group = year), color = "grey70", size = 0.25) +
  geom_line(data = dat_daily_G_recent, aes(x = yday, y = log(flow_mean_7), group = as.factor(year), color = as.factor(year))) +
  scale_colour_manual(values = mycols) + 
  geom_text(data = year_range, aes(x = -Inf, y = -Inf, label = yearrange), hjust = -0.1, vjust = -1) +
  facet_wrap(~ site_name, nrow = 3, scales = "free_y") + 
  xlab("Day of calendar year") + ylab("ln 7-day mean streamflow (cfs)") + labs(color = "Year") + theme_bw() + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.9,0.05), legend.justification = c(1,0))
# dev.off()
```

Streamflow in Yield. Note same y-axis limits
```{r, fig.height = 8, fig.width = 9}
# jpeg("./Explore Data/Long Term Plots/ClimaticContext_Yield_BigG_Recent.jpg", height = 8, width = 9, units = "in", res = 500)
ggplot() + 
  geom_line(data = dat_daily_G, aes(x = yday, y = log(Yield_filled_mm_7), group = year), color = "grey70", size = 0.25) +
  geom_line(data = dat_daily_G_recent, aes(x = yday, y = log(Yield_filled_mm_7), group = as.factor(year), color = as.factor(year))) +
  scale_colour_manual(values = mycols) + 
  geom_text(data = year_range, aes(x = -Inf, y = -Inf, label = yearrange), hjust = -0.1, vjust = -1) +
  facet_wrap(~ site_name, nrow = 3) + 
  xlab("Day of year") + ylab("ln 7-day mean yield") + labs(color = "Year") + theme_bw() + ylim(-5,3.5) +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.9,0.05), legend.justification = c(1,0))
# dev.off()
```


## Exceedance probability
```{r, fig.height = 8, fig.width = 9}
exceedance <- dat_daily_G %>% filter(!is.na(Yield_filled_mm)) %>% 
  mutate(Yield_filled_mm_log = log(Yield_filled_mm)) %>%
  group_by(station_no, site_name, site_id, basin, region, lat, long, elev_ft, area_sqmi, designation, year) %>% 
  arrange(desc(Yield_filled_mm_log), .by_group = TRUE) %>% 
  mutate(exceedance = 100/length(Yield_filled_mm_log)*1:length(Yield_filled_mm_log)) %>%
  ungroup()
exceedance_recent <- exceedance %>% filter(year %in% c(2018:2023))

# jpeg("./Explore Data/Long Term Plots/ClimaticContext_Yield_Recent_Exceedance.jpg", height = 8, width = 9, units = "in", res = 500)
ggplot() + 
  geom_line(data = exceedance, aes(x = exceedance, y = Yield_filled_mm_log, group = year), color = "grey70", size = 0.25) +
  geom_line(data = exceedance_recent, aes(x = exceedance, y = Yield_filled_mm_log, group = as.factor(year), color = as.factor(year))) +
  scale_colour_manual(values = mycols) + 
  geom_text(data = year_range, aes(x = -Inf, y = -Inf, label = yearrange), hjust = -0.1, vjust = -1) +
  facet_wrap(~ site_name, nrow = 3) + 
  xlab("Exceedance probability") + ylab("ln daily mean yield (mm)") + labs(color = "Year") + theme_bw() + ylim(-5,5) +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.9,0.05), legend.justification = c(1,0))
# dev.off()
```


## DSCI
View time series of drought severity and coverage index (DSCI), summarized over HUC08 basins. Accessed <https://droughtmonitor.unl.edu/DmData/TimeSeries.aspx>
```{r}
# get huc 8 codes
huctib <- tibble(site_name = siteinfo$site_name, basin = siteinfo$basin, huc08 = NA)
for (i in 1:dim(siteinfo)[1]) {
  huctib$huc08[i] <- unlist(tibble(get_huc(siteinfo_sp[i,], type = "huc08"))[,11])
  #print(i)
}
huctib <- huctib %>% group_by(basin) %>% summarize(huc08 = unique(huc08)) #%>% filter(basin != "Piney River")
# unique(huctib$huc08)

# bring in drought indices
dsci <- read_csv("C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/Data/Raw data/dm_export_19800101_20241004.csv") %>%
 rename(huc08 = HUCID, name = Name, date = MapDate, dsci = DSCI) %>% mutate(date = ymd(date)) %>% left_join(huctib)

# print table
dsci %>% group_by(basin) %>% summarize(dsci_name = unique(name), huc08 = unique(huc08)) %>% kable(caption = "HUC08 basin codes for primary EcoDrought basins")
```

```{r, fig.height = 8, fig.width = 9}
# calculate monthly means
dsci_monthly <- dsci %>% 
  mutate(monthyear = as_date(paste(format_ISO8601(date, precision = "ym"), "-01", sep = ""))) %>% 
  mutate(year = year(monthyear), month = month(monthyear)) %>%
  group_by(huc08, basin, year, month, monthyear) %>% 
  summarize(dsci_monthly_1 = mean(dsci)) %>% 
  ungroup() %>%
  group_by(huc08, basin) %>%
  mutate(dsci_monthly_2 = rollapply(dsci_monthly_1, FUN = mean, width = 2, align = "right", fill = NA),
         dsci_monthly_3 = rollapply(dsci_monthly_1, FUN = mean, width = 3, align = "right", fill = NA),
         dsci_monthly_4 = rollapply(dsci_monthly_1, FUN = mean, width = 4, align = "right", fill = NA),
         dsci_monthly_5 = rollapply(dsci_monthly_1, FUN = mean, width = 5, align = "right", fill = NA),
         dsci_monthly_6 = rollapply(dsci_monthly_1, FUN = mean, width = 6, align = "right", fill = NA),
         dsci_monthly_7 = rollapply(dsci_monthly_1, FUN = mean, width = 7, align = "right", fill = NA),
         dsci_monthly_8 = rollapply(dsci_monthly_1, FUN = mean, width = 8, align = "right", fill = NA),
         dsci_monthly_9 = rollapply(dsci_monthly_1, FUN = mean, width = 9, align = "right", fill = NA),
         dsci_monthly_10 = rollapply(dsci_monthly_1, FUN = mean, width = 10, align = "right", fill = NA),
         dsci_monthly_11 = rollapply(dsci_monthly_1, FUN = mean, width = 11, align = "right", fill = NA),
         dsci_monthly_12 = rollapply(dsci_monthly_1, FUN = mean, width = 12, align = "right", fill = NA),
         dsci_monthly_13 = rollapply(dsci_monthly_1, FUN = mean, width = 13, align = "right", fill = NA),
         dsci_monthly_14 = rollapply(dsci_monthly_1, FUN = mean, width = 14, align = "right", fill = NA),
         dsci_monthly_15 = rollapply(dsci_monthly_1, FUN = mean, width = 15, align = "right", fill = NA),
         dsci_monthly_16 = rollapply(dsci_monthly_1, FUN = mean, width = 16, align = "right", fill = NA),
         dsci_monthly_17 = rollapply(dsci_monthly_1, FUN = mean, width = 17, align = "right", fill = NA),
         dsci_monthly_18 = rollapply(dsci_monthly_1, FUN = mean, width = 18, align = "right", fill = NA),
         dsci_monthly_19 = rollapply(dsci_monthly_1, FUN = mean, width = 19, align = "right", fill = NA),
         dsci_monthly_20 = rollapply(dsci_monthly_1, FUN = mean, width = 20, align = "right", fill = NA),
         dsci_monthly_21 = rollapply(dsci_monthly_1, FUN = mean, width = 21, align = "right", fill = NA),
         dsci_monthly_22 = rollapply(dsci_monthly_1, FUN = mean, width = 22, align = "right", fill = NA),
         dsci_monthly_23 = rollapply(dsci_monthly_1, FUN = mean, width = 23, align = "right", fill = NA),
         dsci_monthly_24 = rollapply(dsci_monthly_1, FUN = mean, width = 24, align = "right", fill = NA),) %>%
  ungroup()

# plot time series
# jpeg("./Explore Data/Long Term Plots/ClimaticContext_DSCI_1-6-12.jpg", height = 8, width = 9, units = "in", res = 500)
dsci_monthly %>% ggplot() + 
  geom_line(aes(x = monthyear, y = dsci_monthly_1), color = "grey50") + 
  geom_line(aes(x = monthyear, y = dsci_monthly_6), color = mycols[1]) + 
  geom_line(aes(x = monthyear, y = dsci_monthly_12), color = mycols[2]) + 
  facet_wrap(~ basin) + 
  xlab("") + ylab("Drought severity and coverage index (DSCI): 1-, 6-, and 12-month") + theme_bw() + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# dev.off()
```


## SPI
Calculate standardized precipiation index (SPI) for EcoDrought basins at multiple time scales (1-24 months). View time series data. 
```{r, fig.height = 8, fig.width = 9}
# combine and calculate monthly totals
climdf_monthly <- do.call(rbind, climlist) %>% left_join(siteinfo_big) %>% mutate(year = year(date), month = month(date)) %>%
  group_by(station_no, site_name, site_id, basin, region, lat, long, elev_ft, area_sqmi, designation, year, month) %>%
  summarize(precip_mmmonth = sum(precip_mmday)) %>%
  ungroup() %>%
  mutate(date = date(paste(year, month, "01", sep = "-")))

# calculate SPI at various time scales
spi_list <- list()
for (i in 1:dim(siteinfo_big)[1]) {
  d <- climdf_monthly %>% filter(site_name == siteinfo_big$site_name[i])
  for (j in 1:24) {
    myspi <- spi(unlist(d %>% select(precip_mmmonth)), scale = j)
    myspi <- myspi$fitted
    myspi[is.infinite(myspi)] <- NA
    d[,paste("spi", j, sep = "_")] <- myspi
  }
  spi_list[[i]] <- d
  #print(i)
}
spi_monthly <- do.call(rbind, spi_list)
# view(spi_monthly)

# spi_monthly %>% filter(site_id == "SRL") %>% ggplot() + geom_line(aes(x = date, y = spi_1))
# spi_monthly %>% filter(site_id == "SRL") %>% ggplot() + geom_line(aes(x = date, y = spi_3))
# spi_monthly %>% filter(site_id == "SRL") %>% ggplot() + geom_line(aes(x = date, y = spi_6))
# spi_monthly %>% filter(site_id == "SRL") %>% ggplot() + geom_line(aes(x = date, y = spi_12))
# spi_monthly %>% filter(site_id == "SRL") %>% ggplot() + geom_line(aes(x = date, y = spi_24))

# jpeg("./Explore Data/Long Term Plots/ClimaticContext_SPI_1-6-12.jpg", height = 8, width = 9, units = "in", res = 500)
spi_monthly %>% ggplot() + 
  geom_line(aes(x = date, y = spi_1), color = "grey50") + 
  geom_line(aes(x = date, y = spi_6), color = mycols[1]) + 
  geom_line(aes(x = date, y = spi_12), color = mycols[2]) +
  geom_line(aes(x = date, y = spi_24), color = mycols[3]) +
  facet_wrap(~ basin) + 
  xlab("") + ylab("Standardized precipitation index (SPI): 1-, 6-, and 12-month") + theme_bw() + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# dev.off()
```


